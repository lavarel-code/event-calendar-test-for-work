version: '3'
services:
    nginx:
        image: nginx:1.13.6
        volumes:
            - ./:/var/www/html
            - ./docker/server/nginx/log/:/var/html/log
            - ./docker/config/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
        links:
            - php
        networks:
            self:
                ipv4_address: ${NGINX_HOST}
    php:
        build:
            context: docker/build/php
        user: 1000:1000
        links:
            - mysql
        volumes:
            - ./:/var/www/html
            - ./docker/config/php/php.ini:/usr/local/etc/php/php.ini
            - ./docker/config/php/conf.d/docker-php-ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            - ./docker/server/composer:/var/composer
        networks:
            self:
                ipv4_address: ${PHP_HOST}
        environment:
            COMPOSER_HOME: '/var/composer'
    mysql:
        image: mysql:5.7.20
        environment:
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_ROOT}
        volumes:
            - ./docker/server/mysql:/var/lib/mysql
        networks:
            self:
                ipv4_address: ${DB_HOST}
    redis:
        image: redis:3.2
        networks:
            self:
                ipv4_address: ${REDIS_HOST}
    node:
        build:
            context: docker/build/node
        working_dir: /var/www/html
        user: 1000:1000
        environment:
            NPM_CONFIG_PREFIX: '/var/www/node_modules'
        volumes:
            - ./docker/server/node:/var/www/node_modules
            - ./:/var/www/html
networks:
    self:
        driver: bridge
        ipam:
          config:
            - subnet: ${NETWORK_SUBNET}
